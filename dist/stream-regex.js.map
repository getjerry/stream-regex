{"version":3,"file":"stream-regex.js","names":["_debug","_interopRequireDefault","require","_isString","_nfa","obj","__esModule","default","debugLogger","debug","StreamRegex","constructor","regex","res","createPostfix","postfix","hasStartMatcher","hasEndMatcher","nfa","postfixToNFA","Error","match","input","onMatch","options","opts","global","ignoreCase","matchFromStart","matchToEnd","greedy","replace","replacement","onReplace","v","isString","output","exports"],"sources":["../src/stream-regex.ts"],"sourcesContent":["import { Readable } from 'stream';\n\nimport debug from 'debug';\nimport isString from 'lodash/isString';\n\nimport { PostfixNode, createPostfix, postfixToNFA, State, match } from './nfa';\n\nconst debugLogger = debug('StreamRegex');\n\nexport interface MatchOptions {\n  greedy?: boolean;\n}\n\n/**\n * StreamRegex - A class to handle regex matching on a stream of data.\n */\nexport class StreamRegex {\n  private postfix: PostfixNode[];\n  private hasStartMatcher: boolean;\n  private hasEndMatcher: boolean;\n\n  private nfa: State;\n\n\n  constructor(private readonly regex: RegExp) {\n    const res = createPostfix(regex)\n    debugLogger('Postfix: %o', res);\n\n    this.postfix = res.postfix;\n    this.hasStartMatcher = res.hasStartMatcher;\n    this.hasEndMatcher = res.hasEndMatcher;\n\n    const nfa = postfixToNFA(this.postfix);\n    if (!nfa) {\n      throw new Error('Failed to build NFA');\n    }\n    debugLogger('NFA: %o', nfa);\n    this.nfa = nfa;\n  }\n\n  /**\n   * \n   * @param input\n   * @param options\n   */\n  match(input: Readable, onMatch: (match: string) => void, options: MatchOptions = {}): void {\n    const opts = {\n      global: this.regex.global,\n      ignoreCase: this.regex.ignoreCase,\n      matchFromStart: this.hasStartMatcher,\n      matchToEnd: this.hasEndMatcher,\n      greedy: true,\n      onMatch,\n      ...options,\n    }\n\n    match(this.nfa, input, opts);\n  }\n\n  /**\n   * \n   * @param input\n   * @param replacement\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  replace(input: Readable, replacement: string | ((match: string, ...args: any[]) => string), options: MatchOptions = {}): Readable {\n    const opts = {\n      global: this.regex.global,\n      ignoreCase: this.regex.ignoreCase,\n      matchFromStart: this.hasStartMatcher,\n      matchToEnd: this.hasEndMatcher,\n      greedy: true,\n      onReplace: (v: string) => { \n        return isString(replacement) ? v.replace(this.regex, replacement) :  v.replace(this.regex, replacement);\n      },\n      ...options,\n    }\n\n    const output = match(this.nfa, input, opts);\n    if (!output) {\n      // This should never happen.\n      throw new Error('Matcher did not return an output stream.');\n    }\n    return output;\n  }\n}"],"mappings":";;;;;;AAEA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,IAAA,GAAAF,OAAA;AAA+E,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE/E,MAAMG,WAAW,GAAG,IAAAC,cAAK,EAAC,aAAa,CAAC;AAMxC;AACA;AACA;AACO,MAAMC,WAAW,CAAC;EAQvBC,WAAWA,CAAkBC,KAAa,EAAE;IAAA,KAAfA,KAAa,GAAbA,KAAa;IACxC,MAAMC,GAAG,GAAG,IAAAC,kBAAa,EAACF,KAAK,CAAC;IAChCJ,WAAW,CAAC,aAAa,EAAEK,GAAG,CAAC;IAE/B,IAAI,CAACE,OAAO,GAAGF,GAAG,CAACE,OAAO;IAC1B,IAAI,CAACC,eAAe,GAAGH,GAAG,CAACG,eAAe;IAC1C,IAAI,CAACC,aAAa,GAAGJ,GAAG,CAACI,aAAa;IAEtC,MAAMC,GAAG,GAAG,IAAAC,iBAAY,EAAC,IAAI,CAACJ,OAAO,CAAC;IACtC,IAAI,CAACG,GAAG,EAAE;MACR,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACxC;IACAZ,WAAW,CAAC,SAAS,EAAEU,GAAG,CAAC;IAC3B,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;;EAEA;AACF;AACA;AACA;AACA;EACEG,KAAKA,CAACC,KAAe,EAAEC,OAAgC,EAAEC,OAAqB,GAAG,CAAC,CAAC,EAAQ;IACzF,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAE,IAAI,CAACd,KAAK,CAACc,MAAM;MACzBC,UAAU,EAAE,IAAI,CAACf,KAAK,CAACe,UAAU;MACjCC,cAAc,EAAE,IAAI,CAACZ,eAAe;MACpCa,UAAU,EAAE,IAAI,CAACZ,aAAa;MAC9Ba,MAAM,EAAE,IAAI;MACZP,OAAO;MACP,GAAGC;IACL,CAAC;IAED,IAAAH,UAAK,EAAC,IAAI,CAACH,GAAG,EAAEI,KAAK,EAAEG,IAAI,CAAC;EAC9B;;EAEA;AACF;AACA;AACA;AACA;EACE;EACAM,OAAOA,CAACT,KAAe,EAAEU,WAAiE,EAAER,OAAqB,GAAG,CAAC,CAAC,EAAY;IAChI,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAE,IAAI,CAACd,KAAK,CAACc,MAAM;MACzBC,UAAU,EAAE,IAAI,CAACf,KAAK,CAACe,UAAU;MACjCC,cAAc,EAAE,IAAI,CAACZ,eAAe;MACpCa,UAAU,EAAE,IAAI,CAACZ,aAAa;MAC9Ba,MAAM,EAAE,IAAI;MACZG,SAAS,EAAGC,CAAS,IAAK;QACxB,OAAO,IAAAC,iBAAQ,EAACH,WAAW,CAAC,GAAGE,CAAC,CAACH,OAAO,CAAC,IAAI,CAACnB,KAAK,EAAEoB,WAAW,CAAC,GAAIE,CAAC,CAACH,OAAO,CAAC,IAAI,CAACnB,KAAK,EAAEoB,WAAW,CAAC;MACzG,CAAC;MACD,GAAGR;IACL,CAAC;IAED,MAAMY,MAAM,GAAG,IAAAf,UAAK,EAAC,IAAI,CAACH,GAAG,EAAEI,KAAK,EAAEG,IAAI,CAAC;IAC3C,IAAI,CAACW,MAAM,EAAE;MACX;MACA,MAAM,IAAIhB,KAAK,CAAC,0CAA0C,CAAC;IAC7D;IACA,OAAOgB,MAAM;EACf;AACF;AAACC,OAAA,CAAA3B,WAAA,GAAAA,WAAA"}