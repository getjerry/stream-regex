{"version":3,"file":"stream-regex.js","names":["_stream","require","_debug","_interopRequireDefault","_isString","_nfa","obj","__esModule","default","debugLogger","debug","StreamRegex","constructor","regex","res","createPostfix","postfix","hasStartMatcher","hasEndMatcher","nfa","postfixToNFA","Error","match","input","options","output","Readable","objectMode","_read","replace","push","resume","on","replacement","opts","global","ignoreCase","matchFromStart","matchToEnd","greedy","onReplace","v","isString","exports"],"sources":["../src/stream-regex.ts"],"sourcesContent":["import { Readable } from 'stream';\n\nimport debug from 'debug';\nimport isString from 'lodash/isString';\n\nimport { PostfixNode, createPostfix, postfixToNFA, State, match } from './nfa';\n\nconst debugLogger = debug('StreamRegex');\n\nexport interface MatchOptions {\n  // If true, the algorithm will try to match the longest possible string. If false, it will try to match the shortest possible string.\n  // default: true\n  greedy?: boolean;\n  // Size of the highWaterMark for the processing stream.\n  // default: 1024\n  processingStreamHighWaterMark?: number;\n}\n\n/**\n * StreamRegex - A class to handle regex matching on a stream of data.\n */\nexport class StreamRegex {\n  private postfix: PostfixNode[];\n  private hasStartMatcher: boolean;\n  private hasEndMatcher: boolean;\n\n  private nfa: State;\n\n\n  constructor(private readonly regex: RegExp) {\n    const res = createPostfix(regex)\n    debugLogger('Postfix: %o', res);\n\n    this.postfix = res.postfix;\n    this.hasStartMatcher = res.hasStartMatcher;\n    this.hasEndMatcher = res.hasEndMatcher;\n\n    const nfa = postfixToNFA(this.postfix);\n    if (!nfa) {\n      throw new Error('Failed to build NFA');\n    }\n    debugLogger('NFA: %o', nfa);\n    this.nfa = nfa;\n  }\n\n  /**\n   * Match the input stream against the regex.\n   * This reuses the `replace` function by providing a replacement that does not change the input.\n   * Instead, it just pushes the matches into a separate output stream.\n   *\n   * @param input\n   * @param options\n   */\n  match(input: Readable, options: MatchOptions = {}): Readable {\n    const output = new Readable({ objectMode: true });\n    output._read = () => {};\n\n    this.replace(input, (match) => {\n      output.push(match);\n      return match;\n    }, options).resume().on('end', () => {\n      output.push(null);\n    });\n    return output;\n  }\n\n  /**\n   * Replace the matches in the input stream with the replacement.\n   *\n   * @param input\n   * @param replacement\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  replace(input: Readable, replacement: string | ((match: string, ...args: any[]) => string), options: MatchOptions = {}): Readable {\n    const opts = {\n      global: this.regex.global,\n      ignoreCase: this.regex.ignoreCase,\n      matchFromStart: this.hasStartMatcher,\n      matchToEnd: this.hasEndMatcher,\n      greedy: true,\n      onReplace: (v: string) => { \n        return isString(replacement) ? v.replace(this.regex, replacement) :  v.replace(this.regex, replacement);\n      },\n      ...options,\n    }\n\n    return match(this.nfa, input, opts);\n  }\n}"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,SAAA,GAAAD,sBAAA,CAAAF,OAAA;AAEA,IAAAI,IAAA,GAAAJ,OAAA;AAA+E,SAAAE,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE/E,MAAMG,WAAW,GAAG,IAAAC,cAAK,EAAC,aAAa,CAAC;AAWxC;AACA;AACA;AACO,MAAMC,WAAW,CAAC;EAQvBC,WAAWA,CAAkBC,KAAa,EAAE;IAAA,KAAfA,KAAa,GAAbA,KAAa;IACxC,MAAMC,GAAG,GAAG,IAAAC,kBAAa,EAACF,KAAK,CAAC;IAChCJ,WAAW,CAAC,aAAa,EAAEK,GAAG,CAAC;IAE/B,IAAI,CAACE,OAAO,GAAGF,GAAG,CAACE,OAAO;IAC1B,IAAI,CAACC,eAAe,GAAGH,GAAG,CAACG,eAAe;IAC1C,IAAI,CAACC,aAAa,GAAGJ,GAAG,CAACI,aAAa;IAEtC,MAAMC,GAAG,GAAG,IAAAC,iBAAY,EAAC,IAAI,CAACJ,OAAO,CAAC;IACtC,IAAI,CAACG,GAAG,EAAE;MACR,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;IACxC;IACAZ,WAAW,CAAC,SAAS,EAAEU,GAAG,CAAC;IAC3B,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,KAAKA,CAACC,KAAe,EAAEC,OAAqB,GAAG,CAAC,CAAC,EAAY;IAC3D,MAAMC,MAAM,GAAG,IAAIC,gBAAQ,CAAC;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;IACjDF,MAAM,CAACG,KAAK,GAAG,MAAM,CAAC,CAAC;IAEvB,IAAI,CAACC,OAAO,CAACN,KAAK,EAAGD,KAAK,IAAK;MAC7BG,MAAM,CAACK,IAAI,CAACR,KAAK,CAAC;MAClB,OAAOA,KAAK;IACd,CAAC,EAAEE,OAAO,CAAC,CAACO,MAAM,CAAC,CAAC,CAACC,EAAE,CAAC,KAAK,EAAE,MAAM;MACnCP,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;IACF,OAAOL,MAAM;EACf;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE;EACAI,OAAOA,CAACN,KAAe,EAAEU,WAAiE,EAAET,OAAqB,GAAG,CAAC,CAAC,EAAY;IAChI,MAAMU,IAAI,GAAG;MACXC,MAAM,EAAE,IAAI,CAACtB,KAAK,CAACsB,MAAM;MACzBC,UAAU,EAAE,IAAI,CAACvB,KAAK,CAACuB,UAAU;MACjCC,cAAc,EAAE,IAAI,CAACpB,eAAe;MACpCqB,UAAU,EAAE,IAAI,CAACpB,aAAa;MAC9BqB,MAAM,EAAE,IAAI;MACZC,SAAS,EAAGC,CAAS,IAAK;QACxB,OAAO,IAAAC,iBAAQ,EAACT,WAAW,CAAC,GAAGQ,CAAC,CAACZ,OAAO,CAAC,IAAI,CAAChB,KAAK,EAAEoB,WAAW,CAAC,GAAIQ,CAAC,CAACZ,OAAO,CAAC,IAAI,CAAChB,KAAK,EAAEoB,WAAW,CAAC;MACzG,CAAC;MACD,GAAGT;IACL,CAAC;IAED,OAAO,IAAAF,UAAK,EAAC,IAAI,CAACH,GAAG,EAAEI,KAAK,EAAEW,IAAI,CAAC;EACrC;AACF;AAACS,OAAA,CAAAhC,WAAA,GAAAA,WAAA"}